/*
 * include/uapi/linux/switchdev.h - Netlink interface to Switch device
 * Copyright (c) 2014 Jiri Pirko <jiri@resnulli.us>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#ifndef _UAPI_LINUX_SWITCHDEV_H_
#define _UAPI_LINUX_SWITCHDEV_H_

enum {
	SWDEV_CMD_NOOP,
	SWDEV_CMD_FLOW_INSERT,
	SWDEV_CMD_FLOW_REMOVE,
};

enum {
	SWDEV_ATTR_UNSPEC,
	SWDEV_ATTR_IFINDEX,			/* u32 */
	SWDEV_ATTR_FLOW,			/* nest */

	__SWDEV_ATTR_MAX,
	SWDEV_ATTR_MAX = (__SWDEV_ATTR_MAX - 1),
};

enum {
	SWDEV_ATTR_FLOW_MATCH_KEY_UNSPEC,
	SWDEV_ATTR_FLOW_MATCH_KEY_PHY_PRIORITY,		/* u32 */
	SWDEV_ATTR_FLOW_MATCH_KEY_PHY_IN_PORT,		/* u32 (ifindex) */
	SWDEV_ATTR_FLOW_MATCH_KEY_ETH_SRC,		/* ETH_ALEN */
	SWDEV_ATTR_FLOW_MATCH_KEY_ETH_DST,		/* ETH_ALEN */
	SWDEV_ATTR_FLOW_MATCH_KEY_ETH_TCI,		/* be16 */
	SWDEV_ATTR_FLOW_MATCH_KEY_ETH_TYPE,		/* be16 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IP_PROTO,		/* u8 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IP_TOS,		/* u8 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IP_TTL,		/* u8 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IP_FRAG,		/* u8 */
	SWDEV_ATTR_FLOW_MATCH_KEY_TP_SRC,		/* be16 */
	SWDEV_ATTR_FLOW_MATCH_KEY_TP_DST,		/* be16 */
	SWDEV_ATTR_FLOW_MATCH_KEY_TP_FLAGS,		/* be16 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV4_ADDR_SRC,	/* be32 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV4_ADDR_DST,	/* be32 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV4_ARP_SHA,		/* ETH_ALEN */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV4_ARP_THA,		/* ETH_ALEN */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV6_ADDR_SRC,	/* struct in6_addr */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV6_ADDR_DST,	/* struct in6_addr */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV6_LABEL,		/* be32 */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV6_ND_TARGET,	/* struct in6_addr */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV6_ND_SLL,		/* ETH_ALEN */
	SWDEV_ATTR_FLOW_MATCH_KEY_IPV6_ND_TLL,		/* ETH_ALEN */

	__SWDEV_ATTR_FLOW_MATCH_KEY_MAX,
	SWDEV_ATTR_FLOW_MATCH_KEY_MAX = (__SWDEV_ATTR_FLOW_MATCH_KEY_MAX - 1),
};

enum {
	SWDEV_FLOW_ACTION_TYPE_OUTPUT,
	SWDEV_FLOW_ACTION_TYPE_VLAN_PUSH,
	SWDEV_FLOW_ACTION_TYPE_VLAN_POP,
};

enum {
	SWDEV_ATTR_FLOW_ACTION_UNSPEC,
	SWDEV_ATTR_FLOW_ACTION_TYPE,		/* u32 */
	SWDEV_ATTR_FLOW_ACTION_OUT_PORT,	/* u32 (ifindex) */
	SWDEV_ATTR_FLOW_ACTION_VLAN_PROTO,	/* be16 */
	SWDEV_ATTR_FLOW_ACTION_VLAN_TCI,	/* u16 */

	__SWDEV_ATTR_FLOW_ACTION_MAX,
	SWDEV_ATTR_FLOW_ACTION_MAX = (__SWDEV_ATTR_FLOW_ACTION_MAX - 1),
};

enum {
	SWDEV_ATTR_FLOW_ITEM_UNSPEC,
	SWDEV_ATTR_FLOW_ITEM_ACTION,		/* nest */

	__SWDEV_ATTR_FLOW_ITEM_MAX,
	SWDEV_ATTR_FLOW_ITEM_MAX = (__SWDEV_ATTR_FLOW_ITEM_MAX - 1),
};

enum {
	SWDEV_ATTR_FLOW_UNSPEC,
	SWDEV_ATTR_FLOW_MATCH_KEY,		/* nest */
	SWDEV_ATTR_FLOW_MATCH_KEY_MASK,		/* nest */
	SWDEV_ATTR_FLOW_LIST_ACTION,		/* nest */

	__SWDEV_ATTR_FLOW_MAX,
	SWDEV_ATTR_FLOW_MAX = (__SWDEV_ATTR_FLOW_MAX - 1),
};

/* Nested layout of flow add/remove command message:
 *
 *	[SWDEV_ATTR_IFINDEX]
 *	[SWDEV_ATTR_FLOW]
 *		[SWDEV_ATTR_FLOW_MATCH_KEY]
 *			[SWDEV_ATTR_FLOW_MATCH_KEY_*], ...
 *		[SWDEV_ATTR_FLOW_MATCH_KEY_MASK]
 *			[SWDEV_ATTR_FLOW_MATCH_KEY_*], ...
 *		[SWDEV_ATTR_FLOW_LIST_ACTION]
 *			[SWDEV_ATTR_FLOW_ITEM_ACTION]
 *				[SWDEV_ATTR_FLOW_ACTION_*], ...
 *			[SWDEV_ATTR_FLOW_ITEM_ACTION]
 *				[SWDEV_ATTR_FLOW_ACTION_*], ...
 *			...
 */

#define SWITCHDEV_GENL_NAME "switchdev"
#define SWITCHDEV_GENL_VERSION 0x1

#endif /* _UAPI_LINUX_SWITCHDEV_H_ */
